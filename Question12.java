// Project Euler - Question 12:
//   The sequence of triangle numbers is generated by adding the natural numbers.
//   So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. (Six divisors: 1,2,4,7,14,28)
// What is the value of the first triangle number to have over five hundred divisors?

import java.math.BigInteger;

public class Question12 {

    public static void main(String[] _Arguments) {
        BigInteger triangleNumber = new BigInteger("1");
        BigInteger currentNumber = new BigInteger("2");

        while (selectiveSearch(triangleNumber)) {
            triangleNumber = triangleNumber.add(currentNumber);
            currentNumber = currentNumber.add(BigInteger.ONE);
        }

        System.out.println("Answer: " + triangleNumber);
    }

    // Observed the pattern for highly divisible triangle numbers:
    // Concluded that they need to be divisible by 3,4,5 in order to pass the 500 divisor boundary feasibly.
    static boolean selectiveSearch(BigInteger _CandidateNumber) {
        if (_CandidateNumber.mod(new BigInteger("3")).compareTo(BigInteger.ZERO) == 0)
            if (_CandidateNumber.mod(new BigInteger("4")).compareTo(BigInteger.ZERO) == 0)
                if (_CandidateNumber.mod(new BigInteger("5")).compareTo(BigInteger.ZERO) == 0)
                    if (Utility.getDivisors(_CandidateNumber).size() >= 500)
                        return false;
        return true;
    }
}
